version: '3.7'
services:
    db:
        container_name: bkdnojv2_db
        image: postgres
        # restart: always
        restart: unless-stopped
        volumes:
            - ./db/:/var/lib/postgresql/data
        env_file: [env/postgres.env]
        networks: [db]
    redis:
        container_name: bkdnojv2_redis
        image: redis:alpine
        # restart: always
        restart: unless-stopped
        networks: [api]
    base:
        build:
            context: .
            dockerfile: ./docker_base/Dockerfile
        image: nvat/bkdnoj-v2_base
        network_mode: none
    api:
        container_name: bkdnojv2_api
        build:
            context: .
            dockerfile: ./docker_api/Dockerfile
        image: nvat/bkdnoj-v2_api
        init: true
        restart: unless-stopped
        volumes:
            - ./media/:/app/media/
            - ./repo/app/:/app/
        working_dir: /app/
        env_file: [env/postgres.env, env/api.env]
        networks: [api, web, db]
        ports:
            - 8000:8000
        depends_on: [base, db, redis]
    celery:
        container_name: bkdnojv2_celery
        build:
            context: .
            dockerfile: ./docker_celery/Dockerfile
        image: nvat/bkdnoj-v2_celery
        init: true
        restart: unless-stopped
        volumes:
            - ./media/:/app/media/
            - ./repo/app/:/app/
        working_dir: /app/
        env_file: [env/postgres.env, env/api.env]
        networks: [api, db]
        depends_on: [base, db, redis]
    bridged:
        container_name: bkdnojv2_bridged
        build:
            context: .
            dockerfile: ./docker_bridged/Dockerfile
        image: nvat/bkdnoj-v2_bridged
        init: true
        restart: unless-stopped
        volumes:
            - ./media/:/app/media/
            - ./repo/app/:/app/
        working_dir: /app/
        env_file: [env/postgres.env, env/api.env]
        networks: [api, web, db]
        ports:
            - 9999:9999
        depends_on: [base, db, redis]
    web:
        container_name: bkdnojv2_web
        build:
            context: .
            dockerfile: ./docker_web/Dockerfile
            args:
                - REACT_APP_BACKEND_URL=http://localhost
                - REACT_APP_BACKEND_PORT=3080
        image: nvat/bkdnoj-v2_web
        restart: unless-stopped
        env_file: [env/web.env]
        networks: [web]
        ports:
            - 3000:80
        depends_on: [api]
    tags_prediction:
        container_name: bkdnojv2_tags_prediction
        build:
            context: .
            dockerfile: ./docker_tags_pred/Dockerfile
        image: nvat/bkdnoj-v2_tags-prediction
        restart: unless-stopped
        networks: [api]
        ports:
            - 8001:8001
        environment:
            - HTTP_PORT=8001
        depends_on: [api]
networks:
    db:
    api:
    web:
